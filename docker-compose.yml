version: "3"
services:
  api:
    image: node:8
    user: node
    depends_on:
      - mongo
    deploy:
      replicas: 1
    working_dir: /home/api
    environment:
      - STACK=production
      - DATABASE_NAME=stack-poc
      - DATABASE_URL=mongodb://mongo:27017/
    volumes:
      - ./api/:/home/api
    networks:
      - frontend
      - backend
    ports:
      - 4000:4000
    command: npm run deploy

  mongo:
    image: mongo
    user: mongodb
    deploy:
      replicas: 1
    volumes:
      - ./mongo/data/db:/data/db
    networks:
      - backend
    ports:
      - 27017:27017
    command: mongod

  webapp:
    image: node:8
    user: node
    deploy:
      replicas: 1
      # restart_policy:
      #   condition: on-failure
    working_dir: /home/webapp
    environment:
      - STACK=production
      - API_URL=http://localhost:4000/graphql
    volumes:
      - ./webapp/:/home/webapp
    networks:
      - frontend
      - backend
    ports:
      - 3000:3000
    command: npm run deploy

  visualizer:
    image: dockersamples/visualizer:stable
    networks:
      - frontend
    ports:
      - 8080:8080
    stop_grace_period: 1m30s
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      placement:
        constraints: [node.role == manager]
networks:
  frontend:
  backend:

